//  This file was generated by LevelHelper
//  http://www.levelhelper.org
//
//  LevelHelperLoader.h
//  Created by Bogdan Vladu
//  Copyright 2011 Bogdan Vladu. All rights reserved.
//
////////////////////////////////////////////////////////////////////////////////
//
//  This software is provided 'as-is', without any express or implied
//  warranty.  In no event will the authors be held liable for any damages
//  arising from the use of this software.
//  Permission is granted to anyone to use this software for any purpose,
//  including commercial applications, and to alter it and redistribute it
//  freely, subject to the following restrictions:
//  The origin of this software must not be misrepresented; you must not
//  claim that you wrote the original software. If you use this software
//  in a product, an acknowledgment in the product documentation would be
//  appreciated but is not required.
//  Altered source versions must be plainly marked as such, and must not be
//  misrepresented as being the original software.
//  This notice may not be removed or altered from any source distribution.
//  By "software" the author refers to this code file and not the application 
//  that was used to generate this file.
//
////////////////////////////////////////////////////////////////////////////////

#import "LevelHelperLoader.h"

@interface LevelHelperLoader (ANIMATIONS_EXTENSION) 

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//ALL METHODS HAVE BEEN DEPRECATED. PLEASE SEE LHSprite.h for exact the same methods but easier to use.
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

//signature of notification object should be the same as for registerNotifierOnAllAnimationEnds method
-(void) startAnimationWithUniqueName:(NSString*)animName 
                            onSprite:(LHSprite*)ccsprite 
               endNotificationObject:(id)obj 
             endNotificationSelector:(SEL)sel NS_DEPRECATED(10_0, 10_4, 2_0, 2_0);

//CALL one of the 2 prepareAnimatonWithUniqueName.... methods  (only once) 
//before calling this methods in order to prepare the sprite
//will go to first frame when it reaches the end if repeat is YES
-(void) nextFrameForSprite:(LHSprite*)ccsprite repeat:(bool)repeat NS_DEPRECATED(10_0, 10_4, 2_0, 2_0);

-(void) prevFrameForSprite:(LHSprite*)spr repeat:(bool)repeat NS_DEPRECATED(10_0, 10_4, 2_0, 2_0);

-(void) setFrame:(int)value onSprite:(LHSprite*)spr NS_DEPRECATED(10_0, 10_4, 2_0, 2_0);

-(int) numberOfFramesForSprite:(LHSprite*)sprite NS_DEPRECATED(10_0, 10_4, 2_0, 2_0);//will return -1 if no animation on the sprite

-(bool) isSpriteAtLastFrame:(LHSprite*)sprite NS_DEPRECATED(10_0, 10_4, 2_0, 2_0);

//this method will return -1 if fail
+(int) currentFrameOnSprite:(LHSprite*)sprite NS_DEPRECATED(10_0, 10_4, 2_0, 2_0);

//this method will return -1 if fail
+(int) currentFrameOnBody:(b2Body*)body NS_DEPRECATED(10_0, 10_4, 2_0, 2_0);

//this method will return nil if fail
+(NSString*) animationNameOnBody:(b2Body*)body NS_DEPRECATED(10_0, 10_4, 2_0, 2_0);

//this method will return nil if fail
+(NSString*) animationNameOnSprite:(LHSprite*)sprite NS_DEPRECATED(10_0, 10_4, 2_0, 2_0);

//will return false if no animation on sprite or body or not at last frame
-(bool) isBodyAtLastFrame:(b2Body*)body NS_DEPRECATED(10_0, 10_4, 2_0, 2_0);

//will return -1 if no animation on the body
-(int) numberOfFramesForBody:(b2Body*)body NS_DEPRECATED(10_0, 10_4, 2_0, 2_0);

-(void) prevFrameForSpriteWithUniqueName:(NSString*)sprName NS_DEPRECATED(10_0, 10_4, 2_0, 2_0);

//will reset to last frame when it reaches the begining
-(void) prevFrameForSpriteWithUniqueName:(NSString*)sprName repeat:(bool)repeat NS_DEPRECATED(10_0, 10_4, 2_0, 2_0);

-(void) setFrame:(int)value onSpriteWithUniqueName:(NSString*)uniqueName NS_DEPRECATED(10_0, 10_4, 2_0, 2_0);

-(void) prevFrameForSprite:(LHSprite*)spr NS_DEPRECATED(10_0, 10_4, 2_0, 2_0);

-(void) nextFrameForSpriteWithUniqueName:(NSString*)sprName NS_DEPRECATED(10_0, 10_4, 2_0, 2_0);

//will go to first frame when it reaches the end if repeat is YES
-(void) nextFrameForSpriteWithUniqueName:(NSString*)sprName repeat:(bool)repeat NS_DEPRECATED(10_0, 10_4, 2_0, 2_0);

-(void) startAnimationWithUniqueName:(NSString*)animName onSpriteWithUniqueName:(NSString*)sprName NS_DEPRECATED(10_0, 10_4, 2_0, 2_0);

-(void) startAnimationWithUniqueName:(NSString*)animName 
              onSpriteWithUniqueName:(NSString*)sprName
               endNotificationObject:(id)obj 
             endNotificationSelector:(SEL)sel NS_DEPRECATED(10_0, 10_4, 2_0, 2_0);

-(void) prepareAnimationWithUniqueName:(NSString*)animName onSpriteWithUniqueName:(NSString*)sprName NS_DEPRECATED(10_0, 10_4, 2_0, 2_0);

-(void) stopAnimationOnSpriteWithUniqueName:(NSString*)sprName NS_DEPRECATED(10_0, 10_4, 2_0, 2_0);

-(void) nextFrameForSprite:(LHSprite*)ccsprite NS_DEPRECATED(10_0, 10_4, 2_0, 2_0);

@end	
