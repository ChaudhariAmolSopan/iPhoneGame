//  This file was generated by LevelHelper
//  http://www.levelhelper.org
//
//  LevelHelperLoader.mm
//  Created by Bogdan Vladu
//  Copyright 2011 Bogdan Vladu. All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//
//  This software is provided 'as-is', without any express or implied
//  warranty.  In no event will the authors be held liable for any damages
//  arising from the use of this software.
//  Permission is granted to anyone to use this software for any purpose,
//  including commercial applications, and to alter it and redistribute it
//  freely, subject to the following restrictions:
//  The origin of this software must not be misrepresented; you must not
//  claim that you wrote the original software. If you use this software
//  in a product, an acknowledgment in the product documentation would be
//  appreciated but is not required.
//  Altered source versions must be plainly marked as such, and must not be
//  misrepresented as being the original software.
//  This notice may not be removed or altered from any source distribution.
//  By "software" the author refers to this code file and not the application 
//  that was used to generate this file.
//
////////////////////////////////////////////////////////////////////////////////

#import "SHDocumentLoader.h"
#import "LevelHelperLoader.h"
@interface SHSpriteInfo : NSObject {
    
    NSDictionary* textureProperties;
    NSDictionary* physicsProperties;
}
@property (readonly) NSDictionary* textureProperties;
@property (readonly) NSDictionary* physicsProperties;

+(id)spriteInfoWithTexDictionary:(NSDictionary*)texDict physicsDictionary:(NSDictionary*)phyDict;

@end

@interface SHSceneNode : NSObject {
    NSMutableDictionary* sprites; //key spriteName object SHSpriteInfo
}
+(id)SHSceneNodeWithContentOfFile:(NSString*)sceneFile;
-(SHSpriteInfo*)infoForSpriteNamed:(NSString*)name;
@end


@implementation SHSpriteInfo
@synthesize textureProperties;
@synthesize physicsProperties;

-(void)dealloc{
#ifndef LH_ARC_ENABLED
	[textureProperties release];
    [physicsProperties release];
	[super dealloc];
#endif
}
-(id)initWithTextureDictionary:(NSDictionary*)texDict physicsDictionary:(NSDictionary*)phyDict{
    self = [super init];
	if (self != nil) {
        textureProperties = [texDict copy];
        physicsProperties = [phyDict copy];
	}
	return self;
}
+(id)spriteInfoWithTexDictionary:(NSDictionary*)texDict physicsDictionary:(NSDictionary*)phyDict{
    #ifndef LH_ARC_ENABLED
    return [[[SHSpriteInfo alloc] initWithTextureDictionary:texDict physicsDictionary:phyDict] autorelease];
    #else
    return [[SHSpriteInfo alloc] initWithTextureDictionary:texDict physicsDictionary:phyDict];
    #endif   
}
@end
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
@implementation SHSceneNode

-(void)dealloc{
#ifndef LH_ARC_ENABLED
	[sprites release];
	[super dealloc];
#endif
}
-(id)initWithContentOfFile:(NSString*)sceneFile{

    NSString *path = [[NSBundle mainBundle] pathForResource:sceneFile ofType:@"pshs" inDirectory:nil]; 
	    
	NSAssert(nil!=path, @"Invalid SpriteHelper file. Please add the SpriteHelper scene file to Resource folder.");
    
    self = [super init];
	if (self != nil) {
        sprites = [[NSMutableDictionary alloc] init];
    
        NSDictionary *dictionary = [NSDictionary dictionaryWithContentsOfFile:path];

        NSArray* spritesList = [dictionary objectForKey:@"SPRITES_INFO"];
        
        for(NSDictionary* dic in spritesList)
        {
            NSDictionary* texDict = [dic objectForKey:@"TextureProperties"];
            NSDictionary* phyDict = [dic objectForKey:@"PhysicProperties"];
            NSString* name = [texDict objectForKey:@"Name"];
            
            SHSpriteInfo* info = [SHSpriteInfo spriteInfoWithTexDictionary:texDict physicsDictionary:phyDict];
            
            [sprites setObject:info forKey:name];
        }
        
	}
	return self;
}
+(id)SHSceneNodeWithContentOfFile:(NSString*)sceneFile{
    #ifndef LH_ARC_ENABLED
        return [[[SHSceneNode alloc] initWithContentOfFile:sceneFile] autorelease];
    #else
        return [[SHSceneNode alloc] initWithContentOfFile:sceneFile];
    #endif  
}

-(SHSpriteInfo*)infoForSpriteNamed:(NSString*)name{
    return [sprites objectForKey:name];
}
@end
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
@implementation SHDocumentLoader
+ (SHDocumentLoader*)sharedInstance{
	static id sharedInstance = nil;
	if (sharedInstance == nil){
		sharedInstance = [[SHDocumentLoader alloc] init];
	}
    return sharedInstance;
}
////////////////////////////////////////////////////////////////////////////////
-(void)dealloc
{
#ifndef LH_ARC_ENABLED
	[scenes release];
	[super dealloc];
#endif
}
////////////////////////////////////////////////////////////////////////////////
- (id)init
{
	self = [super init];
	if (self != nil) {
        scenes = [[NSMutableDictionary alloc] init];
	}
	return self;
}
-(SHSceneNode*)sceneNodeForSHDocument:(NSString*)shDocument
{
    //will create the node if it does not exit
    SHSceneNode* sceneNode = [scenes objectForKey:shDocument];
    
    if(sceneNode == nil){
        sceneNode = [SHSceneNode SHSceneNodeWithContentOfFile:shDocument];
        [scenes setObject:sceneNode forKey:shDocument];
    }
    return sceneNode;
}

////////////////////////////////////////////////////////////////////////////////}
-(NSDictionary*)textureDictionaryForSpriteNamed:(NSString*)spriteName 
                                     inDocument:(NSString*)spriteHelperDocument{
    
    SHSceneNode* shNode = [self sceneNodeForSHDocument:spriteHelperDocument];
    if(nil != shNode)
    {
        SHSpriteInfo* info = [shNode infoForSpriteNamed:spriteName];
        if(info){
            return info.textureProperties;
        }
    }
    
    return nil;
}
//------------------------------------------------------------------------------
-(NSDictionary*)physicsDictionaryForSpriteNamed:(NSString*)spriteName 
                                     inDocument:(NSString*)spriteHelperDocument{

    SHSceneNode* shNode = [self sceneNodeForSHDocument:spriteHelperDocument];
    if(nil != shNode)
    {
        SHSpriteInfo* info = [shNode infoForSpriteNamed:spriteName];
        if(info){
            return info.physicsProperties;
        }
    }
    
    return nil;
}
//------------------------------------------------------------------------------

@end
